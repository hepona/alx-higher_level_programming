    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 3)
    5
    >>> add_integer(2, -3)
    -1
    >>> add_integer(-2, -3)
    -5
    >>> add_integer(-2, 3)
    1
    >>> add_integer("2", 3)
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
      File "/root/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 4, in add_integer
        raise TypeError("a must be an integer")
    TypeError: a must be an integer
    >>> add_integer(2," 3")
    Traceback (most recent call last):
     File "<stdin>", line 1, in <module>
     File "/root/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 9, in add_integer
        raise TypeError("b must be an integer")
    TypeError: b must be an integer
    >>> add_integer("2","3")
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
      File "/root/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 4, in add_integer
      raise TypeError("a must be an integer")
    TypeError: a must be an integer
    >>> add_integer(4)
    102
    >>> add_integer()
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    TypeError: add_integer() missing 1 required positional argument: 'a'
    >>> add_integer(5.789, 6.2131)
    11
