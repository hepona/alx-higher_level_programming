Using ''matrix_divided''
_______________________

''matrix_divided'' from 2-matrix_divided'' module:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[5, 6, 9, 7], [2,7]]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 12, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix = [[5, 6], [2,7]]
>>> print(matrix_divided(matrix, 3))
[[1.67, 2.0], [0.67, 2.33]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 16, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> print(matrix_divided(matrix, "a"))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 14, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix = [["koi", "adz"], ["po", "aze"]]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[3, "9"], [15, 3]], 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided()
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> matrix_divided([15, 3],) 
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided([[1, 2, 3], [4, 5, 6]] , float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
